{"version":3,"sources":["components/FinishedQuiz/FinishedQuiz.module.css","components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","hoc/Layout/Layout.module.css","components/UI/BackDrop/BackDrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/BackDrop/BackDrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/actionTypes.js","store/actions/quiz.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.jsx","containers/QuizCreator/QuizCreator.js","store/actions/create.js","store/actions/auth.js","containers/Auth/Auth.js","App.js","store/reducers/create.js","store/reducers/quiz.js","store/reducers/auth.js","store/reducers/rootReducer.js","reportWebVitals.js","index.js"],"names":["module","exports","MenuToggle","props","icon","cls","classes","isOpen","faTimes","push","open","faBars","className","join","onClick","onToggle","BackDrop","links","to","label","exact","Drawer","state","map","link","index","activeClassName","active","onClose","this","close","renderLinks","Component","Layout","menu","toggleMenuHandler","setState","menuCloseHandler","styles","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","key","quiz","quizItem","FontAwesomeIcon","error","success","faCheck","length","startNewGame","Loader","center","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","START_NEW_GAME","CREATE_QUIZ_QUESTION","RESET_QUIZ_CREATION","AUTH_SUCCESS","AUTH_LOGOUT","fetchQuizSuccess","fetchQuizesStart","fetchQuizesSuccess","quizes","fetchQuizesError","e","quizSetState","answerState","quizAnswerClick","answerId","dispatch","getState","activeQuestion","rightAnswerId","timeout","window","setTimeout","number","isQuizFinished","clearTimeout","Quiz","fetchQuizById","match","params","QuizWrapper","loading","isFinished","connect","quizId","a","get","response","data","QuizList","name","fetchQuizes","renderQuizes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","Select","options","option","createControl","config","validation","validate","isValid","required","trim","validateForm","formControls","isFormValid","control","hasOwnProperty","Auxiliary","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","sibmitHandler","event","preventDefault","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","controlName","selectChangeHandler","target","select","onSubmit","submitHandler","renderControls","item","post","autoLogout","time","localStorage","removeItem","validateEmail","email","test","String","toLowerCase","Auth","password","minLength","loginHandler","auth","registerHandler","evt","validateControl","onChangeHandler","renderInputs","AuthForm","login","isLogin","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","token","App","path","component","initialState","combineReducers","action","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,aAAe,mCAAmC,gBAAkB,sCAAsC,QAAU,8BAA8B,MAAQ,8B,mBCA5KD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,yB,mBCAzFD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,2B,mBCArED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,mBCA1DD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,SAAW,+B,mBCAzED,EAAOC,QAAU,CAAC,WAAa,+BAA+B,QAAU,4BAA4B,MAAQ,4B,mBCA5GD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,QAAU,wBAAwB,QAAU,0B,mBCA5HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,mBCA3DD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,yB,mBCAzDD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,yB,mBCAvDD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,OAAS,yB,+LCyBZC,EArBI,SAAAC,GACf,IAIIC,EAJEC,EAAM,CACRC,IAAQJ,YAUZ,OANIC,EAAMI,QACNH,EAAOI,IACPH,EAAII,KAAKH,IAAQI,OAEjBN,EAAOO,IAGP,cAAC,IAAD,CACIC,UAAWP,EAAIQ,KAAK,KACpBT,KAAMA,EACNU,QAASX,EAAMY,Y,kCCTZC,EARE,SAAAb,GAEb,OACI,qBAAKS,UAAWN,IAAQU,SAAUF,QAASX,EAAMW,W,QCDnDG,EAAQ,CAAC,CAACC,GAAI,IAAKC,MAAO,YAAaC,OAAO,GAChD,CAACF,GAAI,QAASC,MAAO,gBAAiBC,OAAO,GAC7C,CAACF,GAAI,gBAAiBC,MAAO,cAAeC,OAAO,IAmDxCC,E,4MA9CXC,MAAQ,CACJf,QAAQ,G,iDAIZ,WAAgB,IAAD,OAEX,OAAOU,EAAMM,KAAI,SAACC,EAAMC,GAChB,OACI,6BACI,cAAC,IAAD,CACAP,GAAIM,EAAKN,GACTE,MAAOI,EAAKJ,MACZM,gBAAiBpB,IAAQqB,OACzBb,QAAS,EAAKX,MAAMyB,QAJpB,SAKKJ,EAAKL,SANJM,Q,oBAa1B,WACI,IAAMpB,EAAM,CACRC,IAAQe,QASZ,OANKQ,KAAK1B,MAAMI,QACZF,EAAII,KAAKH,IAAQwB,OAMjB,qCACI,qBAAKlB,UAAWP,EAAIQ,KAAK,KAAzB,SACI,6BACKgB,KAAKE,kBAGbF,KAAK1B,MAAMI,OAAS,cAAC,EAAD,CAAUO,QAASe,KAAK1B,MAAMyB,UAAa,Y,GAzC3DI,aCJAC,E,4MACjBX,MAAM,CACFY,MAAM,G,EAGVC,kBAAoB,WAChB,EAAKC,SAAS,CACVF,MAAO,EAAKZ,MAAMY,Q,EAI1BG,iBAAmB,WACf,EAAKD,SAAS,CACVF,MAAM,K,4CAMd,WACI,OAEI,cADA,CACA,OAAKtB,UAAW0B,IAAOL,OAAvB,UAEI,cAAC,EAAD,CACI1B,OAAUsB,KAAKP,MAAMY,KACrBN,QAAWC,KAAKQ,mBAGpB,cAAC,EAAD,CACItB,SAAWc,KAAKM,kBAChB5B,OAAUsB,KAAKP,MAAMY,OAKzB,+BACKL,KAAK1B,MAAMoC,kB,GArCIP,a,oECSrBQ,EAdI,SAAArC,GACf,IAAME,EAAM,CAACC,IAAQkC,YAIrB,OAHIrC,EAAMmB,OACNjB,EAAII,KAAKH,IAAQH,EAAMmB,QAGvB,oBAAIV,UAAYP,EAAIQ,KAAK,KACzBC,QAAS,kBAAMX,EAAMsC,cAActC,EAAMuC,OAAOC,KADhD,SAEKxC,EAAMuC,OAAOE,QCOXC,EAdK,SAAA1C,GAAK,OACrB,oBAAIS,UAAaN,IAAQuC,YAAzB,SACK1C,EAAM2C,QAAQvB,KAAI,SAACmB,EAAQjB,GACzB,OAAQ,cAAC,EAAD,CAERiB,OAAQA,EACRpB,MAASnB,EAAMmB,MAAQnB,EAAMmB,MAAMoB,EAAOC,IAAM,KAChDF,cAAkBtC,EAAMsC,eAHnBhB,SCiBDsB,EArBI,SAAA5C,GACf,OACA,sBAAKS,UAAWN,IAAQyC,WAAxB,UACI,oBAAGnC,UAAWN,IAAQ0C,SAAtB,UACI,iCACI,mCAAS7C,EAAM8C,aAAf,OADJ,OAEK9C,EAAM+C,YAGX,kCAAQ/C,EAAM8C,aAAd,OAAgC9C,EAAMgD,iBAG1C,cAAC,EAAD,CACIL,QAAW3C,EAAM2C,QACjBL,cAAkBtC,EAAMsC,cACxBnB,MAASnB,EAAMmB,Y,kCCCZ8B,EAjBA,SAAAjD,GACX,IAAME,EAAM,CACRC,IAAQ8C,OACR9C,IAAQH,EAAMkD,OAGlB,OACI,wBACIvC,QAASX,EAAMW,QACfF,UAAWP,EAAIQ,KAAK,KACpByC,SAAYnD,EAAMmD,SAHtB,SAKKnD,EAAMoC,YC2CJgB,EAlDM,SAAApD,GACjB,IAAMqD,EAAeC,OAAOC,KAAKvD,EAAMwD,SAASC,QAAO,SAACC,EAAOC,GAK3D,MAJ2B,YAAvB3D,EAAMwD,QAAQG,IACdD,IAGGA,IACR,GAKH,OACI,sBAAKjD,UAAWN,IAAQiD,aAAxB,UACI,6BACKpD,EAAM4D,KAAKxC,KAAI,SAACyC,EAAUvC,GACvB,IAAMpB,EAAM,CACRC,IAAQ2D,gBACuB,UAA/B9D,EAAMwD,QAAQK,EAASrB,IACrBrC,IAAQ4D,MACR5D,IAAQ6D,SAGR/D,EAAsC,UAA/BD,EAAMwD,QAAQK,EAASrB,IAAkBnC,IAAU4D,IAEhE,OACI,+BACI,mCAAS3C,EAAM,EAAf,OADJ,QAEKuC,EAASd,SACV,cAAC,IAAD,CAAiBtC,UAAWP,EAAIQ,KAAK,KAAMT,KAAMA,MAH5CqB,QAUrB,8BAAI+B,EAAJ,OAAsBrD,EAAM4D,KAAKM,OAAjC,sBACA,gCACI,cAAC,EAAD,CAAQvD,QAASX,EAAMmE,aAAcjB,KAAK,UAA1C,wBAGA,cAAC,IAAD,CAAMnC,GAAG,IAAT,SACI,cAAC,EAAD,CAAQJ,QAASX,EAAMmE,aAAcjB,KAAK,UAA1C,uC,iBCvCLkB,EARA,SAAApE,GACX,OACI,qBAAKS,UAAWN,IAAQkE,OAAxB,SACI,sBAAK5D,UAAWN,IAAQiE,OAAxB,UAAgC,wBAAW,8B,0DCJxCE,QAAMC,OAAO,CACxBC,QAAS,6ECHAC,GAAqB,qBACrBC,GAAuB,uBACvBC,GAAqB,qBACrBC,GAAqB,qBAErBC,GAAiB,iBACjBC,GAAc,cACdC,GAAqB,qBACrBC,GAAiB,iBAEjBC,GAAuB,uBAEvBC,GAAsB,sBAEtBC,GAAe,eACfC,GAAc,cCuCpB,SAASC,GAAkBzB,GAC9B,MAAO,CACHV,KAAM0B,GACNhB,QAID,SAAS0B,KACZ,MAAO,CACHpC,KAAMuB,IAIP,SAASc,GAAoBC,GAChC,MAAO,CACHtC,KAAMwB,GACNc,UAID,SAASC,GAAkBC,GAC9B,MAAO,CACHxC,KAAMyB,GACNZ,MAAO2B,GAIR,SAASC,GAAcC,EAAapC,GACvC,MAAO,CACHN,KAAM2B,GACNe,cACApC,WAiBD,SAASqC,GAAgBC,GAC5B,OAAO,SAACC,EAAUC,GACd,IAAM7E,EAAQ6E,IAAWpC,KACzB,GAAIzC,EAAMyE,YAAa,CAGnB,IAAMjC,EAAML,OAAOC,KAAKpC,EAAMyE,aAAa,GAE3C,GAA+B,YAA3BzE,EAAMyE,YAAYjC,GAClB,OAIR,IAAMZ,EAAW5B,EAAMyC,KAAKzC,EAAM8E,gBAC5BzC,EAAUrC,EAAMqC,QAEtB,GAAIT,EAASmD,gBAAkBJ,EAAU,CAChCtC,EAAQT,EAASP,MAClBgB,EAAQT,EAASP,IAAM,WAE3BuD,EAASJ,GAAa,eAAEG,EAAW,WAAYtC,IAG/C,IAAM2C,EAAUC,OAAOC,YAAW,WA9BvC,IAA2BC,GAkDlC,SAAwBnF,GAEpB,OAAOA,EAAM8E,eAAiB,IAAM9E,EAAMyC,KAAKM,OApB/BqC,CAAepF,GAIf4E,GApCcO,EAoCYnF,EAAM8E,eAAiB,EAnC1D,CACH/C,KAAM6B,GACNuB,YA8BYP,EAtCT,CACH7C,KAAM4B,KA4CEsB,OAAOI,aAAaL,KACrB,UAGH3C,EAAQT,EAASP,IAAM,QACvBuD,EAASJ,GAAa,eAAEG,EAAW,SAAUtC,K,ICnInDiD,G,uKAIF,WACI/E,KAAK1B,MAAM0G,cAAchF,KAAK1B,MAAM2G,MAAMC,OAAOpE,M,kCAGrD,WACId,KAAK1B,MAAMmE,iB,oBAGf,WAEI,OACI,qBAAK1D,UAAWN,IAAQsG,KAAxB,SAEI,sBAAKhG,UAAWN,IAAQ0G,YAAxB,UACI,8DAEAnF,KAAK1B,MAAM8G,UAAYpF,KAAK1B,MAAM4D,KAC5B,cAAC,EAAD,IACAlC,KAAK1B,MAAM+G,WACP,cAAC,EAAD,CACEvD,QAAW9B,KAAK1B,MAAMwD,QACtBI,KAAQlC,KAAK1B,MAAM4D,KACnBO,aAAgBzC,KAAK1B,MAAMmE,eAG7B,cAAC,EAAD,CACExB,QAASjB,KAAK1B,MAAM4D,KAAKlC,KAAK1B,MAAMiG,gBAAgBtD,QACpDI,SAAUrB,KAAK1B,MAAM4D,KAAKlC,KAAK1B,MAAMiG,gBAAgBlD,SACrDT,cAAeZ,KAAK1B,MAAM6F,gBAC1B7C,WAAYtB,KAAK1B,MAAM4D,KAAKM,OAC5BpB,aAAcpB,KAAK1B,MAAMiG,eAAiB,EAC1C9E,MAAOO,KAAK1B,MAAM4F,uB,GAnC/B/D,aAiEJmF,oBAnBf,SAA0B7F,GACtB,MAAO,CACHqC,QAASrC,EAAMyC,KAAKJ,QACpByC,eAAgB9E,EAAMyC,KAAKqC,eAC3BL,YAAazE,EAAMyC,KAAKgC,YACxBmB,WAAY5F,EAAMyC,KAAKmD,WACvBnD,KAAMzC,EAAMyC,KAAKA,KACjBkD,QAAS3F,EAAMyC,KAAKkD,YAI5B,SAA6Bf,GACzB,MAAO,CACHW,cAAe,SAAAlE,GAAE,OAAIuD,GD9BEkB,EC8BqBzE,ED7BhD,uCAAO,WAAMuD,GAAN,iBAAAmB,EAAA,6DACHnB,EAAST,MADN,kBAIwBhB,GAAM6C,IAAN,iBAAoBF,EAApB,UAJxB,OAIOG,EAJP,OAKOxD,EAAOwD,EAASC,KACtBtB,EAASV,GAAiBzB,IAN3B,gDASCmC,EAASN,GAAiB,EAAD,KAT1B,yDAAP,wDADG,IAAwBwB,GC+BvBpB,gBAAiB,SAAAC,GAAQ,OAAIC,EAASF,GAAgBC,KACtD3B,aAAc,kBAAM4B,EDkFjB,CACH7C,KAAM8B,SC/ECgC,CAA6CP,I,4BCnEtDa,G,kKACF,WACI,OAAO5F,KAAK1B,MAAMwF,OAAOpE,KAAI,SAAAwC,GACzB,OACI,6BACI,cAAC,IAAD,CACA7C,GAAI,SAAW6C,EAAKpB,GADpB,SAGIoB,EAAK2D,QAJJ3D,EAAKpB,S,+BAW1B,WACId,KAAK1B,MAAMwH,gB,oBAIf,WACI,OACI,qBAAK/G,UAAWN,KAAQmH,SAAxB,SACI,gCACI,2CAEA5F,KAAK1B,MAAM8G,SAAwC,IAA7BpF,KAAK1B,MAAMwF,OAAOtB,OACtC,cAAC,EAAD,IACA,6BACOxC,KAAK+F,0B,GA7BX5F,aAoDRmF,oBAbf,SAA0B7F,GACvB,MAAO,CACFqE,OAAQrE,EAAMyC,KAAK4B,OACnBsB,QAAS3F,EAAMyC,KAAKkD,YAI5B,SAA6Bf,GACzB,MAAO,CACHyB,YAAa,WAAOzB,EF1CxB,uCAAO,WAAMA,GAAN,iBAAAmB,EAAA,6DACHnB,EAAST,MADN,kBAGwBhB,GAAM6C,IAAI,eAHlC,OAGOC,EAHP,OAMO5B,EAAS,GACflC,OAAOC,KAAK6D,EAASC,MAAMK,SAAQ,SAAC/D,EAAKrC,GACrCkE,EAAOlF,KAAK,CACRkC,GAAImB,EACJ4D,KAAK,SAAD,OAAWjG,EAAM,QAQ7ByE,EAASR,GAAmBC,IAlB7B,kDAoBCO,EAASN,GAAiB,EAAD,KApB1B,0DAAP,2DE8CWuB,CAA6CM,I,gDCvD5D,SAASK,GAAT,GAAsD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,eAChC,OAAQF,GAASE,GAAkBD,EAGvC,IAyBeE,GAzBD,SAAA/H,GACV,IAAMgI,EAAYhI,EAAMkD,MAAQ,OAC1BhD,EAAM,CAACC,KAAQ4H,OACfE,EAAO,UAAMD,EAAN,cAAqBE,KAAKC,UAMvC,OAJIR,GAAU3H,IACVE,EAAII,KAAKH,KAAQiI,SAIjB,sBAAK3H,UAAWP,EAAIQ,KAAK,KAAzB,UACI,uBAAOuH,QAASA,EAAhB,SAA0BjI,EAAMgB,QAChC,uBACAwB,GAAIyF,EACJ/E,KAAM8E,EACNK,MAAOrI,EAAMqI,MACbC,SAAWtI,EAAMsI,WAGhBX,GAAU3H,GAAS,+BAAOA,EAAMuI,cAAgB,iCAAyC,S,oBCAvFC,GAzBA,SAAAxI,GACX,IAAMiI,EAAO,UAAMjI,EAAMgB,MAAZ,YAAqBkH,KAAKC,UACvC,OACI,sBAAK1H,UAAWN,KAAQqI,OAAxB,UACA,uBAAOP,QAASA,EAAhB,SAA0BjI,EAAMgB,QAChC,wBACEwB,GAAIyF,EACJI,MAAOrI,EAAMqI,MACbC,SAAUtI,EAAMsI,SAHlB,SAKItI,EAAMyI,QAAQrH,KAAI,SAACsH,EAAQpH,GAC3B,OACE,wBACE+G,MAAOK,EAAOL,MADhB,SAIGK,EAAOjG,MAFHiG,EAAOL,MAAQ/G,YCV7B,SAASqH,GAAcC,EAAQC,GAClC,OAAO,6BACFD,GADL,IAEEC,aACAjB,OAAQiB,EACRhB,SAAS,EACTQ,MAAO,KAIJ,SAASS,GAAST,GAA2B,IAApBQ,EAAmB,uDAAN,KAC3C,IAAKA,EACH,OAAO,EAGT,IAAIE,GAAU,EAMd,OAJIF,EAAWG,WACbD,EAA2B,KAAjBV,EAAMY,QAAiBF,GAG5BA,EAGF,SAASG,GAAaC,GAC3B,IAAIC,GAAc,EAElB,IAAK,IAAIC,KAAWF,EACdA,EAAaG,eAAeD,KAC9BD,EAAcD,EAAaE,GAASzB,OAASwB,GAIjD,OAAOA,ECvCX,IAIeG,GAJG,SAACvJ,GACf,OAAOA,EAAMoC,UCSjB,SAASoH,GAAoBlD,GAC3B,OAAOqC,GAAc,CACnB3H,MAAM,UAAD,OAAYsF,GACjBiC,aAAc,+BACd/F,GAAI8D,GACH,CAAC0C,UAAU,IAGhB,SAASS,KACP,MAAO,CACL1G,SAAU4F,GAAc,CACtB3H,MAAO,6BACPuH,aAAc,8BACb,CAACS,UAAU,IACdU,QAASF,GAAoB,GAC7BG,QAASH,GAAoB,GAC7BI,QAASJ,GAAoB,GAC7BK,QAASL,GAAoB,I,IAI3BM,G,4MAEJ3I,MAAQ,CACNiI,aAAa,EACblD,cAAe,EACfiD,aAAcM,M,EAGhBM,cAAgB,SAAAC,GACdA,EAAMC,kB,EAGRC,mBAAqB,SAAAF,GACnBA,EAAMC,iBAEN,MAAuD,EAAK9I,MAAMgI,aAA3DpG,EAAP,EAAOA,SAAU2G,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,QAASC,EAAnC,EAAmCA,QAASC,EAA5C,EAA4CA,QAEtCM,EAAe,CACnBpH,SAAUA,EAASsF,MACnB7F,GAAI,EAAKxC,MAAM4D,KAAKM,OAAS,EAC7BgC,cAAe,EAAK/E,MAAM+E,cAC1BvD,QAAS,CACP,CAACF,KAAMiH,EAAQrB,MAAO7F,GAAIkH,EAAQlH,IAClC,CAACC,KAAMkH,EAAQtB,MAAO7F,GAAImH,EAAQnH,IAClC,CAACC,KAAMmH,EAAQvB,MAAO7F,GAAIoH,EAAQpH,IAClC,CAACC,KAAMoH,EAAQxB,MAAO7F,GAAIqH,EAAQrH,MAItC,EAAKxC,MAAMoK,mBAAmBD,GAE9B,EAAKlI,SAAS,CACZmH,aAAa,EACblD,cAAe,EACfiD,aAAcM,Q,EAIlBY,kBAAoB,SAAAL,GAClBA,EAAMC,iBAEN,EAAKhI,SAAS,CACZmH,aAAa,EACblD,cAAe,EACfiD,aAAcM,OAEhB,EAAKzJ,MAAMsK,oB,EAGbC,cAAgB,SAAClC,EAAOmC,GACtB,IAAMrB,EAAY,gBAAO,EAAKhI,MAAMgI,cAC9BE,EAAO,gBAAOF,EAAaqB,IAEjCnB,EAAQxB,SAAU,EAClBwB,EAAQhB,MAAQA,EAChBgB,EAAQzB,MAAQkB,GAASO,EAAQhB,MAAOgB,EAAQR,YAEhDM,EAAaqB,GAAenB,EAE5B,EAAKpH,SAAS,CACZkH,eACAC,YAAaF,GAAaC,M,EAyB9BsB,oBAAsB,SAAAT,GACpB,EAAK/H,SAAS,CACZiE,eAAgB8D,EAAMU,OAAOrC,S,oDAvBjC,WAAkB,IAAD,OACf,OAAO/E,OAAOC,KAAK7B,KAAKP,MAAMgI,cAAc/H,KAAI,SAACoJ,EAAalJ,GAC5D,IAAM+H,EAAU,EAAKlI,MAAMgI,aAAaqB,GAExC,OACE,eAAC,GAAD,WACE,cAAC,GAAD,CACExJ,MAAOqI,EAAQrI,MACfqH,MAAOgB,EAAQhB,MACfT,MAAOyB,EAAQzB,MACfE,iBAAkBuB,EAAQR,WAC1BhB,QAASwB,EAAQxB,QACjBU,aAAcc,EAAQd,aACtBD,SAAU,SAAA0B,GAAK,OAAI,EAAKO,cAAcP,EAAMU,OAAOrC,MAAOmC,MAEjD,IAAVlJ,EAAc,uBAAQ,OAVTkJ,EAAclJ,Q,oBAsBpC,WACE,IAAMqJ,EAAS,cAAC,GAAD,CACb3J,MAAM,iCACNqH,MAAO3G,KAAKP,MAAM+E,cAClBoC,SAAU5G,KAAK+I,oBACfhC,QAAS,CACP,CAAChG,KAAM,EAAG4F,MAAO,GACjB,CAAC5F,KAAM,EAAG4F,MAAO,GACjB,CAAC5F,KAAM,EAAG4F,MAAO,GACjB,CAAC5F,KAAM,EAAG4F,MAAO,MAIrB,OACE,qBAAK5H,UAAWN,KAAQ2J,YAAxB,SACE,gCACE,+CAEA,uBAAMc,SAAUlJ,KAAKmJ,cAArB,UAEGnJ,KAAKoJ,iBAELH,EAED,cAAC,EAAD,CACEzH,KAAK,UACLvC,QAASe,KAAKwI,mBACd/G,UAAWzB,KAAKP,MAAMiI,YAHxB,8BAQA,cAAC,EAAD,CACElG,KAAK,UACLvC,QAASe,KAAK2I,kBACdlH,SAAqC,IAA3BzB,KAAK1B,MAAM4D,KAAKM,OAH5B,qC,GA5HcrC,aAyJXmF,oBAdf,SAAyB7F,GACvB,MAAO,CACLyC,KAAMzC,EAAMoD,OAAOX,SAIvB,SAA4BmC,GAC1B,MAAO,CACLqE,mBAAoB,SAAAW,GAAI,OAAIhF,EC/KxB,SAA6BgF,GACjC,MAAO,CACH7H,KAAM+B,GACN8F,QD4KiCX,CAAmBW,KACxDT,iBAAkB,kBAAMvE,EClKxB,uCAAO,WAAOA,EAAUC,GAAjB,SAAAkB,EAAA,sEACG5C,GAAM0G,KAAK,cAAehF,IAAWzB,OAAOX,MAD/C,OAEHmC,EARG,CACH7C,KAAMgC,KAKH,2CAAP,6DDuKW8B,CAA6C8C,I,oBE5IrD,SAASmB,GAAYC,GACxB,OAAO,SAAAnF,GACHM,WAAWN,GAVfoF,aAAaC,WAAW,SACxBD,aAAaC,WAAW,UACxBD,aAAaC,WAAW,kBACjB,CACHlI,KAAMkC,MAM8B,IAAL8F,ICrCvC,SAASG,GAAcC,GAEnB,MADW,wJACDC,KAAKC,OAAOF,GAAOG,e,IAG1BC,G,4MACHvK,MAAQ,CAEJiI,aAAa,EACbD,aAAc,CACVmC,MAAO,CACHjD,MAAO,GACPnF,KAAM,QACNlC,MAAO,QACPuH,aAAc,2BACdX,OAAO,EACPC,SAAS,EACTgB,WAAY,CACRG,UAAU,EACVsC,OAAO,IAGfK,SAAU,CACNtD,MAAO,GACPnF,KAAM,WACNlC,MAAO,WACPuH,aAAc,8BACdX,OAAO,EACPC,SAAS,EACTgB,WAAY,CACRG,UAAU,EACV4C,UAAW,M,EAM3BC,a,sBAAe,sBAAA3E,EAAA,sDACX,EAAKlH,MAAM8L,KACP,EAAK3K,MAAMgI,aAAamC,MAAMjD,MAC9B,EAAKlH,MAAMgI,aAAawC,SAAStD,OACjC,GAJO,2C,EAQf0D,gB,sBAAkB,sBAAA7E,EAAA,sDACd,EAAKlH,MAAM8L,KACP,EAAK3K,MAAMgI,aAAamC,MAAMjD,MAC9B,EAAKlH,MAAMgI,aAAawC,SAAStD,OACjC,GAJU,2C,EAQlBwC,cAAgB,SAAAmB,GACZA,EAAI/B,kB,EAGRgC,gBAAkB,SAAC5D,EAAOQ,GACtB,IAAIA,EACA,OAAO,EAGX,IAAIE,GAAU,EAcd,OAbIF,EAAWG,WACXD,EAA2B,KAAjBV,EAAMY,QAAiBF,GAIjCF,EAAWyC,QAEXvC,EAAUsC,GAAchD,IAAUU,GAGlCF,EAAW+C,YACX7C,EAAUV,EAAMnE,QAAU2E,EAAW+C,WAAa7C,GAE/CA,G,EAIXmD,gBAAkB,SAAClC,EAAOQ,GAEtB,IAAMrB,EAAY,gBAAO,EAAKhI,MAAMgI,cAC9BE,EAAO,gBAAOF,EAAaqB,IAEjCnB,EAAQhB,MAAQ2B,EAAMU,OAAOrC,MAC7BgB,EAAQxB,SAAU,EAElBwB,EAAQzB,MAAQ,EAAKqE,gBAAgB5C,EAAQhB,MAAOgB,EAAQR,YAE5DM,EAAaqB,GAAenB,EAE5B,IAAID,GAAc,EAClB9F,OAAOC,KAAK4F,GAAczB,SAAQ,SAAAH,GAC9B6B,EAAcD,EAAa5B,GAAMK,OAASwB,KAE9C,EAAKnH,SAAS,CACVkH,eAAcC,iB,EAItB+C,aAAe,WAkBX,OAjBe7I,OAAOC,KAAK,EAAKpC,MAAMgI,cAAc/H,KAAI,SAACoJ,EAAalJ,GAClE,IAAM+H,EAAQ,EAAKlI,MAAMgI,aAAaqB,GACtC,OACI,cAAC,GAAD,CAEItH,KAAMmG,EAAQnG,KACdmF,MAAOgB,EAAQhB,MACfW,SAAUK,EAAQL,SAClBnB,QAASwB,EAAQxB,QACjBD,MAAOyB,EAAQzB,MACf5G,MAAOqI,EAAQrI,MACf8G,iBAAmBuB,EAAQR,WAC3BN,aAAcc,EAAQd,aACtBD,SAAU,SAAC0B,GAAS,EAAKkC,gBAAgBlC,EAAOQ,KAT3CA,EAAYlJ,O,4CAgBjC,WACI,OACI,qBAAKb,UAAWN,KAAQuL,KAAxB,SACI,gCACI,+CAEA,uBAAMd,SAAUlJ,KAAKmJ,cAAepK,UAAWN,KAAQiM,SAAvD,UACK1K,KAAKyK,eAEN,cAAC,EAAD,CACIjJ,KAAK,UACLvC,QAASe,KAAKmK,aACd1I,UAAWzB,KAAKP,MAAMiI,YAH1B,oBAMA,cAAC,EAAD,CACIlG,KAAK,UACLvC,QAASe,KAAKqK,gBACd5I,UAAWzB,KAAKP,MAAMiI,YAH1B,kC,GApIJvH,aA0JLmF,mBAAQ,MARrB,SAA4BjB,GAC1B,MAAO,CACH+F,KAAM,SAACR,EAAOe,EAAOC,GAAf,OAA2BvG,EDhKlC,SAAeuF,EAAOK,EAAUW,GACnC,8CAAO,WAAMvG,GAAN,uBAAAmB,EAAA,6DACGqF,EAAW,CACbjB,QAAOK,WAAUa,mBAAmB,GAGpCC,EAAM,wGACNH,IACAG,EAAM,yHAPP,SASoBnI,KAAM0G,KAAKyB,EAAKF,GATpC,OASGnF,EATH,OAUGC,EAAOD,EAASC,KAGhBqF,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,QAA2B,IAAjBvF,EAAKwF,WAE1D1B,aAAa2B,QAAQ,QAASzF,EAAK0F,SACnC5B,aAAa2B,QAAQ,SAAUzF,EAAK2F,SACpC7B,aAAa2B,QAAQ,iBAAkBJ,GAEvC3G,GAKqBkH,EALA5F,EAAK0F,QAMvB,CACH7J,KAAMiC,GACN8H,WAPAlH,EAASkF,GAAW5D,EAAKwF,YApBtB,kCAwBJ,IAAsBI,IAxBlB,OAAP,sDC+J8CnB,CAAKR,EAAOe,EAAOC,QAMtDtF,CAAkC0E,IChJlCwB,G,4JAdb,WACE,OACE,cAAC,EAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAOC,KAAK,QAAQC,UAAW1B,KAC/B,cAAC,KAAD,CAAOyB,KAAK,gBAAgBC,UAAWtD,KACvC,cAAC,KAAD,CAAOqD,KAAK,YAAYC,UAAW3G,KACnC,cAAC,KAAD,CAAO0G,KAAK,IAAIC,UAAW9F,c,GARnBzF,a,2BCPZwL,GAAe,CACrBzJ,KAAM,ICCN,IAAMyJ,GAAe,CACjB7H,OAAQ,GACRsB,SAAS,EACT/C,MAAO,KAEPP,QAAS,GACTyC,eAAgB,EAChBL,YAAa,KACbmB,YAAY,EACZnD,KAAM,MCXV,IAAMyJ,GAAe,CACjBJ,MAAO,MCEIK,oBAAiB,CAC5B1J,KFUW,WAAmD,IAA7BzC,EAA4B,uDAAtBkM,GAAcE,EAAQ,uCAC7D,OAAOA,EAAOrK,MACV,KAAKuB,GACD,OAAO,6BACAtD,GADP,IACc2F,SAAS,IAE3B,KAAKpC,GACD,OAAO,6BACAvD,GADP,IACc2F,SAAS,EAAOtB,OAAQ+H,EAAO/H,SAEjD,KAAKb,GACD,OAAO,6BACAxD,GADP,IACc2F,SAAS,EAAO/C,MAAOwJ,EAAOxJ,QAEhD,KAAKa,GACD,OAAO,6BACAzD,GADP,IACc2F,SAAS,EAAOlD,KAAM2J,EAAO3J,OAE/C,KAAKiB,GACD,OAAO,6BACA1D,GADP,IACcyE,YAAa2H,EAAO3H,YAAapC,QAAS+J,EAAO/J,UAEnE,KAAKsB,GACD,OAAO,6BACA3D,GADP,IACc4F,YAAY,IAE9B,KAAKhC,GACD,OAAO,6BACA5D,GADP,IACc8E,eAAgBsH,EAAOjH,OACjCV,YAAa,OAErB,KAAKZ,GACD,OAAO,6BACA7D,GADP,IAC0BqC,QAAS,GAC/ByC,eAAgB,EAChBL,YAAa,KACbmB,YAAY,IAEpB,QACI,OAAO5F,IEhDfoD,OHDW,WAAqD,IAA7BpD,EAA4B,uDAAtBkM,GAAcE,EAAQ,uCAC/D,OAAQA,EAAOrK,MACX,KAAK+B,GACD,OAAO,6BACA9D,GADP,IAEIyC,KAAK,GAAD,oBAAMzC,EAAMyC,MAAZ,CAAkB2J,EAAOxC,SAErC,KAAK7F,GACD,OAAO,6BACA/D,GADP,IACcyC,KAAM,KAExB,QACI,OAAOzC,IGVf2K,KDFW,WAAmD,IAA7B3K,EAA4B,uDAAtBkM,GAAcE,EAAQ,uCAC7D,OAAQA,EAAOrK,MACX,KAAKiC,GACD,OAAO,6BACAhE,GADP,IACc8L,MAAOM,EAAON,QAEhC,KAAK7H,GACD,OAAO,6BACAjE,GADP,IACc8L,MAAO,OAEzB,QACI,OAAO9L,MELJqM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKRQ,GACc,kBAAX7H,QACPA,OAAO8H,qCACL9H,OAAO8H,qCAAqC,IAEvCC,KAEHC,GAAQC,aACZC,GACAL,GACEM,aAAgBC,QAIdC,GACJ,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,UAKRO,IAASC,OAAOH,GAAKI,SAASC,eAAe,SAK7CtB,O","file":"static/js/main.dba36f3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2s10O\",\"FontAwesomeIcon\":\"FinishedQuiz_FontAwesomeIcon__3KgOl\",\"success\":\"FinishedQuiz_success__3F7Tf\",\"error\":\"FinishedQuiz_error__1Ny00\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__2sFSJ\",\"close\":\"Drawer_close__2IUHC\",\"active\":\"Drawer_active__3Lm4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__103bq\",\"open\":\"MenuToggle_open__KM2qS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__22c_3\",\"QuizWrapper\":\"Quiz_QuizWrapper__3fo5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__3jcEU\",\"Question\":\"ActiveQuiz_Question__WZpo3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__2LyOP\",\"success\":\"AnswerItem_success__6Zjpr\",\"error\":\"AnswerItem_error__AsYB9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3RYsh\",\"error\":\"Button_error__275Zh\",\"success\":\"Button_success__StQ3a\",\"primary\":\"Button_primary__1zHM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Loader_center__2aaSU\",\"Loader\":\"Loader_Loader__g6-Mh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1-Fz5\",\"invalid\":\"Input_invalid__2g_PL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__29gJg\",\"AuthForm\":\"Auth_AuthForm__2bwXd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2nH68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop_BackDrop__2tzIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__3n2en\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__2GEMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__25Xil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__3gN03\"};","import React from 'react'\r\nimport classes from './MenuToggle.module.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [\r\n        classes.MenuToggle\r\n    ]\r\n\r\n    let icon;\r\n    if (props.isOpen) {\r\n        icon = faTimes;\r\n        cls.push(classes.open)\r\n    } else {\r\n        icon = faBars;\r\n    }\r\n    return (\r\n        <FontAwesomeIcon \r\n            className={cls.join(' ')} \r\n            icon={icon}\r\n            onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToggle","import React from 'react'\r\nimport classes from './BackDrop.module.css'\r\n\r\n\r\nconst BackDrop = props => {\r\n\r\n    return (\r\n        <div className={classes.BackDrop} onClick={props.onClick}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackDrop","import React, {Component} from 'react'\r\nimport classes from './Drawer.module.css'\r\nimport BackDrop from '../../UI/BackDrop/BackDrop'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst links = [{to: '/', label: 'Quiz List', exact: true}, \r\n    {to: '/auth', label: 'Authorisation', exact: false}, \r\n    {to: '/quiz-creator', label: 'Create Quiz', exact: false}]\r\n\r\n\r\n\r\nclass Drawer extends Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n\r\n    renderLinks () {\r\n\r\n        return links.map((link, index) => {\r\n                return (\r\n                    <li key= {index}>\r\n                        <NavLink \r\n                        to={link.to} \r\n                        exact={link.exact} \r\n                        activeClassName={classes.active}\r\n                        onClick={this.props.onClose}>\r\n                            {link.label}\r\n                        </NavLink>\r\n                    </li>\r\n                )\r\n            })        \r\n    } \r\n\r\n    render() {\r\n        const cls = [\r\n            classes.Drawer,\r\n        ]\r\n\r\n        if (!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n\r\n        \r\n\r\n        return (\r\n            <>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks()}\r\n                    </ul>\r\n                </nav>\r\n                {this.props.isOpen ? <BackDrop onClick={this.props.onClose}/> : null}\r\n            </>            \r\n        )\r\n    }\r\n}  \r\n\r\nexport default Drawer","import React, { Component } from \"react\"\r\nimport styles from './Layout.module.css'\r\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\"\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\"\r\n\r\n\r\n\r\n\r\nexport default class Layout extends Component {\r\n    state={\r\n        menu: false\r\n    }\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    menuCloseHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        return (\r\n            //это корневой див всего приложения\r\n            <div className={styles.Layout}>\r\n\r\n                <Drawer\r\n                    isOpen = {this.state.menu}\r\n                    onClose = {this.menuCloseHandler}\r\n                />\r\n\r\n                <MenuToggle \r\n                    onToggle ={this.toggleMenuHandler}\r\n                    isOpen = {this.state.menu}\r\n                />\r\n\r\n  \r\n\r\n                <main> \r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport classes from './AnswerItem.module.css'\r\n\r\nconst AnswerItem = props => {\r\n    const cls = [classes.AnswerItem]\r\n    if (props.state) {\r\n        cls.push(classes[props.state])\r\n    }\r\n    return (\r\n        <li className ={cls.join(' ')} \r\n        onClick={() => props.onAnswerClick(props.answer.id)}>\r\n            {props.answer.text}\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nexport default AnswerItem","import React from 'react'\r\nimport classes from './AnswersList.module.css'\r\nimport AnswerItem from './AnswerItem/AnswerItem'\r\n\r\nconst AnswersList = props => (\r\n    <ul className = {classes.AnswersList}>\r\n        {props.answers.map((answer, index) => {\r\n           return (<AnswerItem \r\n           key={index}\r\n           answer={answer}\r\n           state = {props.state ? props.state[answer.id] : null}\r\n           onAnswerClick = { props.onAnswerClick\r\n                    }\r\n           />)\r\n        })}\r\n    </ul>\r\n)\r\n\r\nexport default AnswersList","import React from \"react\";\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\nconst ActiveQuiz = props => {\r\n    return (\r\n    <div className={classes.ActiveQuiz}>\r\n        <p className={classes.Question}>\r\n            <span>\r\n                <strong>{props.answerNumber}.</strong>&nbsp;\r\n                {props.question}\r\n            </span>\r\n\r\n            <small>{props.answerNumber} of {props.quizLength}</small>\r\n        </p>\r\n\r\n        <AnswersList\r\n            answers = {props.answers}\r\n            onAnswerClick = { props.onAnswerClick}\r\n            state = {props.state}\r\n        />\r\n    </div>\r\n)}\r\n\r\n\r\nexport default ActiveQuiz","import React from 'react'\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled = {props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\nimport classes from './FinishedQuiz.module.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faCheck  } from '@fortawesome/free-solid-svg-icons'\r\nimport Button from \"../UI/Button/Button\";\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst FinishedQuiz = props => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total ++;\r\n        } \r\n\r\n        return total;\r\n    }, 0)\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n                {props.quiz.map((quizItem, index) => {\r\n                    const cls = [\r\n                        classes.FontAwesomeIcon,\r\n                        props.results[quizItem.id] === 'error'\r\n                        ? classes.error\r\n                        : classes.success\r\n                    ]\r\n\r\n                    const icon = props.results[quizItem.id] === 'error' ? faTimes : faCheck;\r\n\r\n                    return (\r\n                        <li key={index}>\r\n                            <strong>{index+1}.</strong> &nbsp;\r\n                            {quizItem.question}\r\n                            <FontAwesomeIcon className={cls.join(' ')} icon={icon}/>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            \r\n            \r\n            <p>{successCount} of {props.quiz.length} correct answers</p>\r\n            <div>\r\n                <Button onClick={props.startNewGame} type='primary'>\r\n                    Play again\r\n                </Button>\r\n                <Link to='/'>\r\n                    <Button onClick={props.startNewGame} type='success'>\r\n                        Go to tests list\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default FinishedQuiz","import React from 'react'\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = props => {\r\n    return (\r\n        <div className={classes.center}>\r\n            <div className={classes.Loader}><div></div><div></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-8bce4-default-rtdb.europe-west1.firebasedatabase.app/'\r\n})","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE';\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ';\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION';\r\nexport const START_NEW_GAME = 'START_NEW_GAME';\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION';\r\nexport const FINISH_CREATE_QUIZ = 'FINISH_CREATE_QUIZ';\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION';\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import axios from \"../../axios/axios-quiz\";\r\nimport {\r\n    FETCH_QUIZES_START, \r\n    FETCH_QUIZES_SUCCESS, \r\n    FETCH_QUIZES_ERROR, \r\n    FETCH_QUIZ_SUCCESS,\r\n    QUIZ_SET_STATE,\r\n    FINISH_QUIZ,\r\n    QUIZ_NEXT_QUESTION,\r\n    START_NEW_GAME\r\n} from './actionTypes'\r\n\r\nexport function fetchQuizes () {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n        try {\r\n            const response = await axios.get('Quizes.json')//надо обязательно заканчивать JSON\r\n            //ключи объекта это уникальные ид наших квизов\r\n            //сделаем мапу,чтобы данные можно было использовать внутри реакт компонентов\r\n            const quizes = [];\r\n            Object.keys(response.data).forEach((key, index) => {\r\n                quizes.push({\r\n                    id: key,\r\n                    name: `Quiz #${index+1}`\r\n                })\r\n            })\r\n\r\n         /*    this.setState({\r\n                quizes,\r\n                loading: false\r\n            }) */\r\n            dispatch(fetchQuizesSuccess(quizes))\r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizById (quizId) {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n\r\n        try {\r\n            const response = await axios.get(`Quizes/${quizId}.json`);\r\n            const quiz = response.data;\r\n            dispatch(fetchQuizSuccess(quiz))\r\n          \r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n        } \r\n\r\n    }\r\n}\r\n\r\nexport function fetchQuizSuccess (quiz) {\r\n    return {\r\n        type: FETCH_QUIZ_SUCCESS,\r\n        quiz\r\n    }\r\n}\r\n\r\nexport function fetchQuizesStart () {\r\n    return {\r\n        type: FETCH_QUIZES_START\r\n    }\r\n}\r\n\r\nexport function fetchQuizesSuccess (quizes) {\r\n    return {\r\n        type: FETCH_QUIZES_SUCCESS,\r\n        quizes\r\n    }\r\n}\r\n\r\nexport function fetchQuizesError (e) {\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        error: e\r\n    }\r\n}\r\n\r\nexport function quizSetState (answerState, results) {\r\n    return {\r\n        type: QUIZ_SET_STATE,\r\n        answerState,\r\n        results\r\n    }\r\n}\r\n\r\nexport function finishQuiz() {\r\n    return {\r\n        type: FINISH_QUIZ\r\n    }\r\n}\r\n\r\nexport function quizNextQuestion (number) {\r\n    return {\r\n        type: QUIZ_NEXT_QUESTION,\r\n        number\r\n    }\r\n}\r\n\r\nexport function quizAnswerClick(answerId) {\r\n    return (dispatch, getState) => {\r\n        const state = getState().quiz\r\n        if (state.answerState) {\r\n            //Метод Object.keys() возвращает массив из собственных \r\n            //перечисляемых свойств переданного объекта\r\n            const key = Object.keys(state.answerState)[0];\r\n            //проверка чтобы не завершать игру несколькими кликами по правильному ответу старого вопроса\r\n            if (state.answerState[key] === 'success') {\r\n                return;\r\n            }\r\n        }\r\n\r\n        const question = state.quiz[state.activeQuestion]\r\n        const results = state.results\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            if (!results[question.id]) { //если объект пустой\r\n                results[question.id] = 'success';\r\n            } \r\n            dispatch(quizSetState({[answerId]: 'success'}, results))    \r\n\r\n            //чтобы в течение секунды показать, что ответ правильный\r\n            const timeout = window.setTimeout(() => {\r\n                //проверка, закончились ли вопросы\r\n                if (isQuizFinished(state)) {\r\n                    dispatch(finishQuiz())\r\n\r\n                } else {\r\n                    dispatch(quizNextQuestion(state.activeQuestion + 1,))\r\n\r\n                }\r\n\r\n                window.clearTimeout(timeout);\r\n            }, 1000)\r\n\r\n        } else {\r\n            results[question.id] = 'error';\r\n            dispatch(quizSetState({[answerId]: 'error'}, results))\r\n        } \r\n    }\r\n}\r\n\r\nfunction isQuizFinished(state) {\r\n\r\n    return state.activeQuestion + 1 === state.quiz.length;\r\n \r\n}\r\n\r\nexport function startNewGame() {\r\n    return {\r\n        type: START_NEW_GAME\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz' \r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport { connect } from 'react-redux'\r\nimport { fetchQuizById, quizAnswerClick, startNewGame } from '../../store/actions/quiz'\r\n\r\n\r\nclass Quiz extends Component {\r\n\r\n   \r\n\r\n    componentDidMount() {      \r\n        this.props.fetchQuizById(this.props.match.params.id)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.startNewGame()\r\n      }\r\n\r\n    render () {\r\n    \r\n        return (\r\n            <div className={classes.Quiz}>\r\n                \r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Please, answer the questions</h1>\r\n                    {\r\n                    this.props.loading || !this.props.quiz\r\n                        ? <Loader/> \r\n                        : this.props.isFinished \r\n                            ? <FinishedQuiz\r\n                                results = {this.props.results}\r\n                                quiz = {this.props.quiz}\r\n                                startNewGame = {this.props.startNewGame}\r\n\r\n                                />\r\n                            : <ActiveQuiz \r\n                                answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                                question={this.props.quiz[this.props.activeQuestion].question}\r\n                                onAnswerClick={this.props.quizAnswerClick}\r\n                                quizLength={this.props.quiz.length}\r\n                                answerNumber={this.props.activeQuestion + 1}\r\n                                state={this.props.answerState}\r\n                                />\r\n                    }\r\n                 \r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        results: state.quiz.results, // [id]: 'success' 'error'\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState, // [id]: 'success' 'error'\r\n        isFinished: state.quiz.isFinished,\r\n        quiz: state.quiz.quiz,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n    return {\r\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n        startNewGame: () => dispatch(startNewGame())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom'\r\nimport classes from './QuizList.module.css'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport {fetchQuizes} from '../../store/actions/quiz'\r\n\r\nclass QuizList extends Component {\r\n    renderQuizes() {\r\n        return this.props.quizes.map(quiz => {\r\n            return (\r\n                <li key={quiz.id}>\r\n                    <NavLink\r\n                    to={'/quiz/' + quiz.id}\r\n                    >\r\n                       {quiz.name}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.fetchQuizes()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Quiz List</h1>\r\n                    { \r\n                    this.props.loading && this.props.quizes.length !== 0\r\n                    ? <Loader/> \r\n                    : <ul> \r\n                            {this.renderQuizes()} \r\n                      </ul> \r\n                    }\r\n \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n   return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading\r\n   }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n    return {\r\n        fetchQuizes: () => {dispatch(fetchQuizes())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React from 'react'\r\nimport classes from './Input.module.css'\r\n\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n    const inputType = props.type || 'text';\r\n    const cls = [classes.Input];\r\n    const htmlFor = `${inputType} - ${Math.random()}`\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push(classes.invalid);\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input \r\n            id={htmlFor} \r\n            type={inputType} \r\n            value={props.value}\r\n            onChange= {props.onChange}    \r\n            />\r\n\r\n            {isInvalid(props) ? <span>{props.errorMessage || 'Please enter a correct value'}</span> : null}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport classes from './Select.module.css'\r\nconst Select = props => {\r\n    const htmlFor = `${props.label}-${Math.random()}`;//id  для каждого селект\r\n    return (\r\n        <div className={classes.Select}>\r\n        <label htmlFor={htmlFor}>{props.label}</label>\r\n        <select\r\n          id={htmlFor}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n        >\r\n          { props.options.map((option, index) => {\r\n            return (\r\n              <option\r\n                value={option.value}\r\n                key={option.value + index}\r\n              >\r\n                {option.text}\r\n              </option>\r\n            )\r\n          }) }\r\n        </select>\r\n      </div>\r\n    ) \r\n}\r\n\r\nexport default Select","//набор функций для создангия контролов, функция вернет объект, похожий, что мы делали в блоке авторизации.\r\n\r\n\r\n\r\n\r\n\r\nexport function createControl(config, validation) {\r\n    return {\r\n      ...config,\r\n      validation, //обьект с параметрами валидации\r\n      valid: !validation, //если передали объект с параметрами валидации, то по умолчанию вэлид = фолс\r\n      touched: false,\r\n      value: ''\r\n    }\r\n  }\r\n  \r\n  export function validate(value, validation = null) {\r\n    if (!validation) {\r\n      return true\r\n    }\r\n  \r\n    let isValid = true\r\n  \r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid\r\n    }\r\n  \r\n    return isValid\r\n  }\r\n  \r\n  export function validateForm(formControls) {\r\n    let isFormValid = true\r\n  \r\n    for (let control in formControls) {\r\n      if (formControls.hasOwnProperty(control)) { //проверяем только те поля, которые есть у самого объекта forMcONTROLS, унаследованные свойства из прототипа не будут рассматриваться\r\n        isFormValid = formControls[control].valid && isFormValid\r\n      }\r\n    }\r\n  \r\n    return isFormValid\r\n  }","const Auxiliary = (props) => {\r\n    return props.children;\r\n}\r\n\r\nexport default Auxiliary","import React, {Component} from 'react'\r\nimport classes from './QuizCreator.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Select from '../../components/UI/Select/Select'\r\nimport {createControl, validate, validateForm} from '../../form/formFramework'\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\r\nimport {connect} from 'react-redux';\r\nimport {createQuizQuestion, finishCreateQuiz} from '../../store/actions/create';\r\n\r\nfunction createOptionControl(number) {\r\n  return createControl({\r\n    label: `Answer ${number}`,\r\n    errorMessage: 'This value couldn`t be empty',\r\n    id: number\r\n  }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n  return {\r\n    question: createControl({\r\n      label: 'Please enter your question',\r\n      errorMessage: 'Question couldn`t be empty'\r\n    }, {required: true}),\r\n    option1: createOptionControl(1),\r\n    option2: createOptionControl(2),\r\n    option3: createOptionControl(3),\r\n    option4: createOptionControl(4)\r\n  }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n  state = {\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n    formControls: createFormControls()\r\n  }\r\n\r\n  sibmitHandler = event => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  addQuestionHandler = event => {\r\n    event.preventDefault()\r\n\r\n    const {question, option1, option2, option3, option4} = this.state.formControls\r\n\r\n    const questionItem = {\r\n      question: question.value,\r\n      id: this.props.quiz.length + 1,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      answers: [\r\n        {text: option1.value, id: option1.id},\r\n        {text: option2.value, id: option2.id},\r\n        {text: option3.value, id: option3.id},\r\n        {text: option4.value, id: option4.id}\r\n      ]\r\n    }\r\n\r\n    this.props.createQuizQuestion(questionItem)\r\n\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n  }\r\n\r\n  createQuizHandler = event => {\r\n    event.preventDefault()\r\n\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    })\r\n    this.props.finishCreateQuiz()\r\n  }\r\n\r\n  changeHandler = (value, controlName) => {\r\n    const formControls = {...this.state.formControls}\r\n    const control = {...formControls[controlName]}\r\n\r\n    control.touched = true\r\n    control.value = value\r\n    control.valid = validate(control.value, control.validation)\r\n\r\n    formControls[controlName] = control\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid: validateForm(formControls)\r\n    })\r\n  }\r\n\r\n  renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName]\r\n\r\n      return (\r\n        <Auxiliary key={controlName + index}>\r\n          <Input\r\n            label={control.label}\r\n            value={control.value}\r\n            valid={control.valid}\r\n            shouldValidate={!!control.validation}\r\n            touched={control.touched}\r\n            errorMessage={control.errorMessage}\r\n            onChange={event => this.changeHandler(event.target.value, controlName)}\r\n          />\r\n          {index === 0 ? <hr/> : null}\r\n        </Auxiliary>\r\n      )\r\n    })\r\n  }\r\n\r\n  selectChangeHandler = event => {\r\n    this.setState({\r\n      rightAnswerId: +event.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const select = <Select\r\n      label=\"Please choose the right answer\"\r\n      value={this.state.rightAnswerId}\r\n      onChange={this.selectChangeHandler}\r\n      options={[\r\n        {text: 1, value: 1},\r\n        {text: 2, value: 2},\r\n        {text: 3, value: 3},\r\n        {text: 4, value: 4}\r\n      ]}\r\n    />\r\n\r\n    return (\r\n      <div className={classes.QuizCreator}>\r\n        <div>\r\n          <h1>Quiz creation</h1>\r\n\r\n          <form onSubmit={this.submitHandler}>\r\n\r\n            {this.renderControls()}\r\n\r\n            {select}\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.addQuestionHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Add new question\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.createQuizHandler}\r\n              disabled={this.props.quiz.length === 0}\r\n            >\r\n              Create quiz\r\n            </Button>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quiz: state.create.quiz\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n    finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from './actionTypes'\r\nimport axios from '../../axios/axios-quiz';\r\n\r\nexport  function createQuizQuestion (item) {\r\n    return {\r\n        type: CREATE_QUIZ_QUESTION,\r\n        item\r\n    }\r\n}\r\n\r\nexport function resetQuizCreation () {\r\n    return {\r\n        type: RESET_QUIZ_CREATION\r\n    }\r\n}\r\n\r\nexport function finishCreateQuiz () {\r\n    return async (dispatch, getState) => {\r\n        await axios.post('Quizes.json', getState().create.quiz)\r\n        dispatch(resetQuizCreation())\r\n    }\r\n           \r\n}\r\n\r\n","import axios from 'axios'\r\nimport { AUTH_SUCCESS, AUTH_LOGOUT } from './actionTypes'\r\nexport function auth (email, password, isLogin) {\r\n    return async dispatch => {\r\n        const authData = {\r\n            email, password, returnSecureToken: true\r\n        }\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDmSEbUiK5KfPbs7TxShOxYJk1eFlqVJtw';\r\n        if (isLogin) {\r\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDmSEbUiK5KfPbs7TxShOxYJk1eFlqVJtw';\r\n        }\r\n        const response = await axios.post(url, authData);\r\n        const data = response.data;\r\n\r\n        //обычно сессия длиться час, и нам надо через час заново автоматически авторизоваться\r\n        const expirationDate = new Date(new Date().getTime + data.expiresIn * 1000)\r\n        //чтобы поддерживать сессию, надо токен из ответа положить в localStorage\r\n        localStorage.setItem('token', data.idToken)\r\n        localStorage.setItem('userId', data.localId)\r\n        localStorage.setItem('expirationDate', expirationDate)\r\n\r\n        dispatch(authSuccess(data.idToken))\r\n        dispatch(autoLogout(data.expiresIn))\r\n    }\r\n}\r\n\r\nexport function authSuccess (token) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token\r\n    }\r\n\r\n}\r\n\r\nexport function logout () {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expirationDate')\r\n    return {\r\n        type: AUTH_LOGOUT,\r\n    }\r\n}\r\n\r\nexport function autoLogout (time) {\r\n    return dispatch => {\r\n        setTimeout(dispatch(logout()), time*1000)\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport classes from './Auth.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {auth} from '../../store/actions/auth'\r\n\r\n\r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\n class Auth extends Component {\r\n    state = {\r\n        //сама валидация формы\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Please enter valid email',\r\n                valid: false, //базовое состояние контрола, но тогда ошибка будет всегда\r\n                touched: false, // для этого стэйт, чтобы выводить ошибку, только если инпут в фокусе и введены неверные данные.\r\n                validation: { //правила для валидации контрола\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Password',\r\n                errorMessage: 'Please enter valid password',\r\n                valid: false,\r\n                touched: false,\r\n                validation: { \r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler = async () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            true\r\n        );\r\n      }\r\n\r\n    registerHandler = async () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            false\r\n        );\r\n    }\r\n\r\n    submitHandler = evt => {\r\n        evt.preventDefault();\r\n    }\r\n\r\n    validateControl = (value, validation) => {\r\n        if(!validation) { // если параметров для валидации нет, то она пройдена\r\n            return true;\r\n        }\r\n\r\n        let isValid = true; //по умолчанию все ок\r\n        if (validation.required) {\r\n            isValid = value.trim() !== '' && isValid; \r\n            //&& isValid - вернет фолс, если первая проверка фолс, а текущая тру.\r\n        }\r\n\r\n        if (validation.email) {\r\n            //в гугле найти email js regex. перенес функцию наверх (или библиотека is js)\r\n            isValid = validateEmail(value) && isValid;\r\n        }\r\n\r\n        if (validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid; \r\n        }\r\n        return isValid;\r\n \r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n        //нельзя мутировать исходный стэйт. создаем копию formControls\r\n        const formControls = {...this.state.formControls} // спрэд оператор делает независимый объект с копией. так стэйт точно не будет мутировать\r\n        const control = {...formControls[controlName]} //копия текущего инпута (контрола)\r\n        //теперь изменяем значения копии, чтобы потом через сетСтэйт изменить настоящий контрол\r\n        control.value = event.target.value;\r\n        control.touched = true;\r\n        //функция валидации\r\n        control.valid = this.validateControl(control.value, control.validation);\r\n\r\n        formControls[controlName] = control;\r\n        //валидация формы. по умолчанию тру. надо пробежаться по всем контролам и проверить валидные ли они. \r\n        let isFormValid = true;\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid;\r\n        })\r\n        this.setState({\r\n            formControls, isFormValid\r\n        })\r\n    }\r\n\r\n    renderInputs = () => {\r\n        const inputs = Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control=this.state.formControls[controlName];\r\n            return (\r\n                <Input\r\n                    key={controlName+index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    required={control.required}\r\n                    touched={control.touched}\r\n                    valid={control.valid}\r\n                    label={control.label}\r\n                    shouldValidate= {!!control.validation}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={(event)=>{this.onChangeHandler(event, controlName)}}\r\n                />\r\n            )\r\n        })\r\n        return inputs;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Authorisation</h1> \r\n                    \r\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n                        {this.renderInputs()}\r\n\r\n                        <Button \r\n                            type='success' \r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}>                            \r\n                            Log in</Button>\r\n\r\n                        <Button \r\n                            type='primary' \r\n                            onClick={this.registerHandler}\r\n                            disabled={!this.state.isFormValid}>\r\n                            Register</Button>\r\n                        \r\n                    </form>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n  \r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n        auth: (email, login, isLogin) => dispatch(auth(email, login, isLogin)),\r\n\r\n    }\r\n  }\r\n  \r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)","import { Component } from 'react';\r\nimport Layout from './hoc/Layout/Layout'\r\nimport Quiz from './containers/Quiz/Quiz';\r\nimport {Route, Switch} from 'react-router-dom'\r\n\r\nimport QuizList from './containers/QuizList/QuizList';\r\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\r\nimport Auth from './containers/Auth/Auth';\r\n\r\nclass App extends Component {\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Switch>\r\n          <Route path='/auth' component={Auth}/>\r\n          <Route path='/quiz-creator' component={QuizCreator}/>\r\n          <Route path='/quiz/:id' component={Quiz}/>\r\n          <Route path='/' component={QuizList}/>\r\n        </Switch>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from \"../actions/actionTypes\"\r\n\r\nconst initialState = {\r\nquiz: [] //сюда будем добавлять объект вопроса.\r\n}\r\n\r\nexport default function createReducer (state=initialState, action) {\r\n    switch (action.type) {\r\n        case CREATE_QUIZ_QUESTION:\r\n            return {\r\n                ...state, \r\n                quiz: [...state.quiz, action.item]\r\n            }\r\n        case RESET_QUIZ_CREATION:\r\n            return {\r\n                ...state, quiz: []\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}","import { FETCH_QUIZES_ERROR, FETCH_QUIZES_SUCCESS, FETCH_QUIZES_START, \r\n    FETCH_QUIZ_SUCCESS, QUIZ_SET_STATE, FINISH_QUIZ, QUIZ_NEXT_QUESTION, START_NEW_GAME\r\n } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,\r\n\r\n    results: {}, // [id]: 'success' 'error'\r\n    activeQuestion: 0,\r\n    answerState: null, // [id]: 'success' 'error'\r\n    isFinished: false,\r\n    quiz: null\r\n}\r\n\r\nexport default function quizReducer (state=initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state, loading: true\r\n            }\r\n        case FETCH_QUIZES_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quizes: action.quizes\r\n            }\r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state, loading: false, error: action.error\r\n            }\r\n        case FETCH_QUIZ_SUCCESS: \r\n            return {\r\n                ...state, loading: false, quiz: action.quiz\r\n            }\r\n        case QUIZ_SET_STATE:\r\n            return {\r\n                ...state, answerState: action.answerState, results: action.results\r\n            }\r\n        case FINISH_QUIZ: \r\n            return {\r\n                ...state, isFinished: true\r\n            }\r\n        case QUIZ_NEXT_QUESTION: \r\n            return {\r\n                ...state, activeQuestion: action.number,\r\n                answerState: null\r\n            }\r\n        case START_NEW_GAME:\r\n            return {\r\n                ...state,             results: {}, \r\n                activeQuestion: 0,\r\n                answerState: null, \r\n                isFinished: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n    ","import { AUTH_SUCCESS, AUTH_LOGOUT } from \"../actions/actionTypes\"\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\n\r\nexport default function authReducer (state=initialState, action) {\r\n    switch (action.type) {\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state, token: action.token\r\n            }\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state, token: null\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport createReducer from './create'\r\nimport quizReducer from './quiz'\r\nimport authReducer from './auth'\r\n\r\nexport default combineReducers ({\r\n    quiz: quizReducer,\r\n    create: createReducer,\r\n    auth: authReducer\r\n})","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {createStore, compose, applyMiddleware} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './store/reducers/rootReducer'\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n    )\r\n  );\r\n\r\nconst app = (\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>\r\n)\r\nReactDOM.render(app, document.getElementById('root') );\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}